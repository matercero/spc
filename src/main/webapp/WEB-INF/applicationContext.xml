<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd"  xmlns:aop="http://www.springframework.org/schema/aop">

    <context:annotation-config />    
    
    <context:component-scan base-package="es.matercero.spc" />
    
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>
   
    <bean id="propertyPlaceholder"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>/WEB-INF/classes/config.properties</value>
        </property>
    </bean>
    
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url"             value="${jdbc.url}" />
        <property name="username"        value="${jdbc.username}" />
        <property name="password"        value="${jdbc.password}" />
    </bean>
  

    <!-- Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <property name="dataSource">
            <ref bean="dataSource" />
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
                <prop key="hibernate.show_sql">${database.hibernateShowSql}</prop>
            </props>
        </property>

        <property name="annotatedClasses">
            <list> 
                <value>es.matercero.spc.hibernate.Role</value>                
                <value>es.matercero.spc.hibernate.User</value>
                <value>es.matercero.spc.hibernate.Cliente</value>
                <value>es.matercero.spc.hibernate.Proveedor</value>
                <value>es.matercero.spc.hibernate.Componente</value>
                <value>es.matercero.spc.hibernate.Pago</value>
                <value>es.matercero.spc.hibernate.Categoria</value>
            </list>
        </property>
    </bean>
    
    <bean id="transactionManager" 
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <security:http pattern="/javax.faces.resource/**" security="none"/>
    <security:http pattern="/images/**"  security="none"/>
    <security:http pattern="/css/**"     security="none"/>
    <security:http pattern="/login.jsf*" security="none"/>

    <security:http auto-config='true'>        
        <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
        <!-- <security:intercept-url pattern="/indicador/**" access="ROLE_ADMIN" />
               <security:intercept-url pattern="/**" access="ROLE_USER" />
        -->
        <security:form-login login-page='/login.jsf' 
                             default-target-url='/home.jsf'
                             always-use-default-target='true'/>
    </security:http>
    
    
 
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="sha"/>
            <security:jdbc-user-service data-source-ref="dataSource" 
                                        users-by-username-query="
		      SELECT username,password, enabled 
		      FROM user
                      WHERE username=?"  
                                        authorities-by-username-query="
		      SELECT u.username, r.authority 
                      FROM user u, role r, user_role ur 
		      WHERE u.id = ur.user_id AND r.id = ur.rol_id AND u.username = ?" 
 
            />
        </security:authentication-provider>
    </security:authentication-manager>
  
    <tx:annotation-driven/>
    
</beans>
